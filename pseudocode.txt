Procedure 1
 - Parameters: this procedure takes a pointer to the array and the size of the array. It uses a for loop to initialize each position in the array to 0

 	Pseudocode

 	Procedure initialize(array_ptr, array_size):
 		for i=0 to i=array_size do
 			array_ptr[i] = 0



 Procedure 2

 - Parameters: this procedure takes a pointer to the array and the size of the array. It generates n random integers (indices) less than size and sets the value of the element at those indices to 1 where n is 10% of the size of the array.

 	Pseudocode

 	Procedure setones(array_ptr, array_size):
 		for i=0 to i=(0.1 * array_size)-1 do
 			index = random number less than array_size
 			array_ptr[index] = 1



 Procedure 3

 - Parameters: this procedure takes a pointer to the array, the size of the array and the number of dimensions the array has. 

 - Given a multidimensional array with n number of dimensions where all nested array of equal sizes, a linear array of the same size  will be related to the multidimensional array thus:

 the location in indices of an element in the multidimensional array will be equivalent to same location in the linear array written in base n where n is the number of dimensions of the multidimensional array.

 	Pseudocode

 	Procedure print(array_ptr, array_size, number_of_dimensions):
 		for i=0 to i=(0.05*array_size)-1 do

 			temp = random number less than size
 			temp2 = temp in base number_of_dimensions
 			print value and temp2 in appropriate format 


